let chr91 = {
 character: "勹",
  strokes: [
    "M 343 588 Q 376 631 412 684 Q 434 721 453 740 Q 463 750 458 764 Q 454 777 426 800 Q 399 818 381 818 Q 362 817 370 794 Q 391 748 298 605 Q 255 539 195 466 Q 185 456 183 450 Q 179 440 193 442 Q 223 445 313 551 Q 317 557 324 564 L 343 588 Z",
    "M 618 69 Q 600 63 500 91 Q 490 92 491 88 Q 491 84 502 76 Q 557 33 585 1 Q 600 -20 614 -17 Q 636 -20 659 3 Q 741 66 768 228 Q 789 339 803 508 Q 804 547 830 575 Q 843 588 843 597 Q 842 606 822 620 Q 795 642 758 654 Q 737 663 667 643 Q 642 639 608 630 Q 460 599 343 588 C 313 585 294 569 324 564 Q 327 564 329 563 Q 366 553 409 561 Q 521 576 608 591 Q 726 609 739 593 Q 757 551 728 317 Q 707 185 661 107 Q 642 70 618 69 Z",
  ],
};

let chr92 = {
    character: "勸",
  strokes: [
    "M 337 713 Q 331 750 328 777 Q 328 793 311 797 Q 275 812 258 804 Q 243 795 257 780 Q 285 749 297 712 Q 297 709 298 706 L 307 677 Q 316 635 332 621 Q 344 614 347 623 Q 347 626 341 688 L 337 713 Z",
    "M 341 688 Q 351 692 363 695 Q 375 698 389 705 Q 393 709 392 715 Q 391 719 380 721 Q 361 718 337 713 L 298 706 Q 258 700 208 690 Q 154 690 152 685 Q 151 678 156 671 Q 168 661 189 652 Q 204 645 216 650 Q 259 663 307 677 L 341 688 Z",
    "M 486 738 Q 487 756 513 801 Q 525 814 515 823 Q 505 836 474 850 Q 459 857 445 850 Q 436 844 443 835 Q 459 801 426 669 Q 420 650 422 636 Q 423 626 436 632 Q 446 641 475 709 L 486 738 Z",
    "M 475 709 Q 506 709 519 713 Q 570 731 624 724 Q 634 724 638 731 Q 639 740 630 749 Q 594 773 528 750 Q 507 746 486 738 C 458 728 445 709 475 709 Z",
    "M 183 549 Q 173 553 149 553 Q 140 554 138 550 Q 134 546 142 534 Q 161 509 180 464 Q 184 451 195 443 Q 211 430 212 441 Q 213 445 212 452 L 208 472 Q 195 515 193 530 C 190 547 190 547 183 549 Z",
    "M 311 493 Q 321 530 334 542 Q 349 561 332 570 Q 281 600 259 578 Q 211 557 183 549 C 154 540 165 520 193 530 Q 193 531 257 549 Q 275 553 279 547 Q 283 544 280 530 Q 279 514 274 493 C 267 464 303 464 311 493 Z",
    "M 254 459 Q 281 466 322 472 Q 329 473 329 479 Q 329 483 311 493 C 297 501 297 501 274 493 Q 237 480 208 472 C 179 464 182 454 212 452 Q 219 451 227 453 L 254 459 Z",
    "M 432 601 Q 425 605 397 606 Q 388 607 386 603 Q 382 599 390 587 Q 409 559 428 507 Q 432 492 443 483 Q 458 470 460 481 Q 461 485 461 492 L 458 512 Q 446 563 441 581 C 436 599 436 599 432 601 Z",
    "M 565 528 Q 578 571 592 584 Q 610 603 592 614 Q 577 623 557 637 Q 544 644 528 636 Q 509 623 481 614 Q 460 607 432 601 C 403 595 413 571 441 581 Q 441 582 443 582 Q 479 592 509 599 Q 528 605 534 596 Q 535 595 524 529 C 519 499 556 499 565 528 Z",
    "M 461 492 Q 462 492 464 491 Q 471 490 479 492 Q 509 499 573 508 Q 580 509 580 515 Q 580 519 565 528 C 551 536 551 536 524 529 Q 487 519 458 512 C 429 505 432 500 461 492 Z",
    "M 246 349 Q 261 379 290 401 Q 297 408 295 419 Q 288 446 254 459 C 227 471 221 474 227 453 Q 228 452 229 448 Q 242 406 153 290 Q 111 238 55 179 Q 46 172 44 167 Q 41 160 52 160 Q 103 170 214 308 Q 215 311 218 313 L 246 349 Z",
    "M 263 109 Q 266 251 273 289 Q 280 313 271 322 Q 256 338 246 349 C 226 371 208 341 218 313 Q 242 255 212 79 Q 185 -14 224 -54 Q 240 -67 250 -44 Q 260 -14 262 90 L 263 109 Z",
    "M 419 425 Q 422 431 423 437 Q 420 458 380 485 Q 371 489 365 489 Q 362 489 362 481 Q 359 462 400 419 C 411 407 411 407 419 425 Z",
    "M 432 392 Q 534 417 535 419 Q 542 425 538 431 Q 534 440 511 445 Q 493 448 419 425 L 400 419 Q 366 412 326 408 Q 298 404 318 391 Q 343 376 388 383 L 432 392 Z",
    "M 446 309 Q 470 315 498 319 Q 523 325 527 328 Q 533 334 530 340 Q 526 347 505 353 Q 472 359 449 344 L 394 330 Q 363 326 329 322 Q 304 318 322 306 Q 349 291 390 298 Q 391 299 394 298 C 403 299 417 302 446 309 Z",
    "M 439 209 Q 469 216 503 222 Q 531 229 535 232 Q 541 238 538 244 Q 534 251 513 257 Q 489 263 441 243 L 393 231 Q 359 227 321 222 Q 296 218 314 206 Q 341 191 393 200 L 439 209 Z",
    "M 434 142 Q 435 178 439 209 L 441 243 Q 442 277 446 309 L 449 344 Q 449 348 450 350 Q 457 371 432 392 C 410 412 378 411 388 383 Q 388 382 390 379 Q 393 369 394 330 L 394 298 Q 394 273 393 231 L 393 200 Q 392 172 392 133 C 392 103 433 112 434 142 Z",
    "M 392 133 Q 391 134 389 133 Q 331 123 263 109 C 238 104 238 104 262 90 Q 286 74 309 82 Q 408 112 553 111 Q 568 112 572 119 Q 575 128 562 137 Q 516 167 468 151 Q 452 148 434 142 L 392 133 Z",
    "M 753 450 Q 801 462 848 467 Q 861 468 865 461 Q 872 445 869 400 Q 859 238 828 153 Q 812 99 795 83 Q 785 76 768 83 Q 743 96 719 109 Q 698 121 709 96 Q 745 41 761 -1 Q 767 -23 788 -22 Q 807 -19 832 8 Q 901 84 925 356 Q 929 417 953 454 Q 969 473 960 483 Q 947 501 914 515 Q 892 528 866 517 Q 821 498 757 480 L 704 467 Q 638 455 598 453 Q 583 454 583 446 Q 583 439 600 428 Q 621 415 640 422 Q 668 431 699 438 L 753 450 Z",
    "M 699 438 Q 636 159 513 28 Q 494 9 471 -14 Q 459 -21 457 -26 Q 453 -33 469 -32 Q 523 -32 626 101 Q 635 116 644 129 Q 720 256 753 450 L 757 480 Q 760 489 770 552 Q 776 598 799 651 Q 806 661 797 670 Q 781 688 747 706 Q 728 718 710 713 Q 691 709 704 689 Q 729 658 726 628 Q 717 540 704 467 L 699 438 Z",
  ],
};

function setup() {
 createCanvas(500, 500);
  background(255);
  rectMode(CENTER);
  rect(width / 2, height / 2, 300, 300);
  line(width / 2, height / 2 - 300 / 2, width / 2, height / 2 + 300 / 2);
  line(width / 2 - 300 / 2, height / 2, width / 2 + 300 / 2, height / 2);

  translate(100, 370);
  
  push();
  translate(-20,10);
  scale(0.33, -0.33);
  let ctx91 = drawingContext;
  ctx91.fillStyle = "black";
  ctx91.strokeStyle = "black";
  for (let j = 0; j < chr91.strokes.length; j++) {
    p = new Path2D(chr91.strokes[j]);
    ctx91.fill(p);
  }
  translate(250,150);
  scale(0.45, 0.45);
  let ctx92 = drawingContext;
  ctx92.fillStyle = "black";
  ctx92.strokeStyle = "black";
  for (let j = 0; j < chr92.strokes.length; j++) {
    p = new Path2D(chr92.strokes[j]);
    ctx92.fill(p);
  }
  pop();
}
